diff --git a/node_modules/ant-design-vue/es/vc-tree-select/src/SearchInput.js b/node_modules/ant-design-vue/es/vc-tree-select/src/SearchInput.js
index f9fb28d..db51d04 100644
--- a/node_modules/ant-design-vue/es/vc-tree-select/src/SearchInput.js
+++ b/node_modules/ant-design-vue/es/vc-tree-select/src/SearchInput.js
@@ -97,14 +97,9 @@ var SearchInput = {
       var _this3 = this;
 
       if (this.inputRef.current) {
-        if (isDidMount) {
-          setTimeout(function () {
-            _this3.inputRef.current.focus();
-          }, 0);
-        } else {
-          // set it into else, Avoid scrolling when focus
-          this.inputRef.current.focus();
-        }
+        setTimeout(function () {
+          _this3.inputRef.current.focus();
+        }, 200);
       }
     },
     blur: function blur() {
diff --git a/node_modules/ant-design-vue/es/vc-trigger/Popup.js b/node_modules/ant-design-vue/es/vc-trigger/Popup.js
index 9273b24..0787ecd 100644
--- a/node_modules/ant-design-vue/es/vc-trigger/Popup.js
+++ b/node_modules/ant-design-vue/es/vc-trigger/Popup.js
@@ -47,9 +47,9 @@ export default {
   mounted: function mounted() {
     var _this = this;
 
+    _this.setStretchSize();
     this.$nextTick(function () {
       _this.rootNode = _this.getPopupDomNode();
-      _this.setStretchSize();
     });
   },
 
@@ -61,13 +61,7 @@ export default {
   //     this.domEl = null;
   //   }
   // },
-  updated: function updated() {
-    var _this2 = this;
 
-    this.$nextTick(function () {
-      _this2.setStretchSize();
-    });
-  },
   beforeDestroy: function beforeDestroy() {
     if (this.$el.parentNode) {
       this.$el.parentNode.removeChild(this.$el);
diff --git a/node_modules/ant-design-vue/es/vc-trigger/Trigger.js b/node_modules/ant-design-vue/es/vc-trigger/Trigger.js
index ba3d65d..ad22591 100644
--- a/node_modules/ant-design-vue/es/vc-trigger/Trigger.js
+++ b/node_modules/ant-design-vue/es/vc-trigger/Trigger.js
@@ -443,6 +443,13 @@ export default {
       if (alignPoint && event) {
         this.setPoint(event);
       }
+      if (hasProp(this, 'stretch')) {
+        this.$nextTick(function () {
+          if (this._component) {
+            this._component.setStretchSize();
+          }
+        });
+      }
     },
     setPoint: function setPoint(point) {
       var alignPoint = this.$props.alignPoint;
